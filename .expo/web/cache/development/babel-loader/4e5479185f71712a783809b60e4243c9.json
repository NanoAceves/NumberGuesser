{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport React from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport TextInput from \"react-native-web/dist/exports/TextInput\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Card from \"../components/Card\";\nimport Colors from \"../constants/Colors\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar restart = function restart(rounds) {\n  rounds = -1;\n  console.log(rounds);\n};\n\nvar _useState = useState(undefined),\n    _useState2 = _slicedToArray(_useState, 2),\n    name = _useState2[0],\n    setName = _useState2[1];\n\nvar setPokemon = function setPokemon() {\n  var _await$useFetchPokemo, _await$useFetchPokemo2, name;\n\n  return _regeneratorRuntime.async(function setPokemon$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(useFetchPokemon(enteredValue));\n\n        case 2:\n          _await$useFetchPokemo = _context.sent;\n          _await$useFetchPokemo2 = _slicedToArray(_await$useFetchPokemo, 1);\n          name = _await$useFetchPokemo2[0];\n          setName(name);\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};\n\nvar GameOverScreen = function GameOverScreen(_ref) {\n  var rounds = _ref.rounds,\n      numberGuessed = _ref.numberGuessed,\n      onRestartGame = _ref.onRestartGame;\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsxs(Card, {\n      style: styles.gameOverBox,\n      children: [_jsx(Text, {\n        style: styles.gameOverTitle,\n        children: \"Game Over\"\n      }), _jsx(Text, {\n        children: \"Guessed:\"\n      }), _jsx(Text, {\n        style: styles.gameOverMsg,\n        children: numberGuessed\n      }), _jsxs(Text, {\n        children: [\"Took: \", rounds, \" rounds\"]\n      })]\n    }), _jsx(View, {\n      children: _jsx(Button, {\n        title: \"Restart\",\n        style: styles.button,\n        color: Colors.secondary,\n        onPress: function onPress() {\n          onRestartGame();\n        }\n      })\n    }), name]\n  });\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  gameOverTitle: {\n    fontSize: 26,\n    color: Colors.secondary,\n    margin: 15,\n    textAlign: 'center'\n  },\n  gameOverMsg: {\n    fontSize: 22,\n    color: Colors.primary,\n    margin: 10\n  },\n  gameOverBox: {\n    shadowColor: Colors.tertiary\n  }\n});\nexport default GameOverScreen;","map":{"version":3,"sources":["C:/Users/nano0/Desktop/NumberGuesser/screens/GameOverScreen.js"],"names":["React","Card","Colors","restart","rounds","console","log","useState","undefined","name","setName","setPokemon","useFetchPokemon","enteredValue","GameOverScreen","numberGuessed","onRestartGame","styles","screen","gameOverBox","gameOverTitle","gameOverMsg","button","secondary","StyleSheet","create","flex","padding","alignItems","fontSize","color","margin","textAlign","primary","shadowColor","tertiary"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;;;;;;AAEA,OAAOC,IAAP;AACA,OAAOC,MAAP;;;;AAEA,IAAMC,OAAO,GAAG,SAAVA,OAAU,CAACC,MAAD,EAAY;AACxBA,EAAAA,MAAM,GAAG,CAAC,CAAV;AACAC,EAAAA,OAAO,CAACC,GAAR,CAAYF,MAAZ;AACD,CAHH;;AAKE,gBAAwBG,QAAQ,CAACC,SAAD,CAAhC;AAAA;AAAA,IAAOC,IAAP;AAAA,IAAaC,OAAb;;AAEA,IAAMC,UAAU,GAAG,SAAbA,UAAa;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACIC,eAAe,CAACC,YAAD,CADnB;;AAAA;AAAA;AAAA;AACVJ,UAAAA,IADU;AAEjBC,UAAAA,OAAO,CAACD,IAAD,CAAP;;AAFiB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAnB;;AAKF,IAAMK,cAAc,GAAG,SAAjBA,cAAiB,OAA4C;AAAA,MAA1CV,MAA0C,QAA1CA,MAA0C;AAAA,MAAlCW,aAAkC,QAAlCA,aAAkC;AAAA,MAAnBC,aAAmB,QAAnBA,aAAmB;AACjE,SACI,MAAC,IAAD;AAAM,IAAA,KAAK,EAAEC,MAAM,CAACC,MAApB;AAAA,eACI,MAAC,IAAD;AAAM,MAAA,KAAK,EAAED,MAAM,CAACE,WAApB;AAAA,iBACE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEF,MAAM,CAACG,aAApB;AAAA;AAAA,QADF,EAEE,KAAC,IAAD;AAAA;AAAA,QAFF,EAGE,KAAC,IAAD;AAAM,QAAA,KAAK,EAAEH,MAAM,CAACI,WAApB;AAAA,kBAAkCN;AAAlC,QAHF,EAIE,MAAC,IAAD;AAAA,6BAAaX,MAAb;AAAA,QAJF;AAAA,MADJ,EAOI,KAAC,IAAD;AAAA,gBACI,KAAC,MAAD;AACE,QAAA,KAAK,EAAC,SADR;AAEE,QAAA,KAAK,EAAEa,MAAM,CAACK,MAFhB;AAGE,QAAA,KAAK,EAAEpB,MAAM,CAACqB,SAHhB;AAIE,QAAA,OAAO,EAAG,mBAAM;AAACP,UAAAA,aAAa;AAAG;AAJnC;AADJ,MAPJ,EAeKP,IAfL;AAAA,IADJ;AAmBD,CApBD;;AAsBA,IAAMQ,MAAM,GAAGO,UAAU,CAACC,MAAX,CAAkB;AAC7BP,EAAAA,MAAM,EAAE;AACJQ,IAAAA,IAAI,EAAE,CADF;AAEJC,IAAAA,OAAO,EAAE,EAFL;AAGJC,IAAAA,UAAU,EAAE;AAHR,GADqB;AAM7BR,EAAAA,aAAa,EAAE;AACXS,IAAAA,QAAQ,EAAE,EADC;AAEXC,IAAAA,KAAK,EAAE5B,MAAM,CAACqB,SAFH;AAGXQ,IAAAA,MAAM,EAAE,EAHG;AAIXC,IAAAA,SAAS,EAAE;AAJA,GANc;AAY7BX,EAAAA,WAAW,EAAE;AACTQ,IAAAA,QAAQ,EAAE,EADD;AAETC,IAAAA,KAAK,EAAE5B,MAAM,CAAC+B,OAFL;AAGTF,IAAAA,MAAM,EAAE;AAHC,GAZgB;AAiB7BZ,EAAAA,WAAW,EAAE;AACTe,IAAAA,WAAW,EAAEhC,MAAM,CAACiC;AADX;AAjBgB,CAAlB,CAAf;AAsBA,eAAerB,cAAf","sourcesContent":["import React from 'react'\r\nimport { Button, StyleSheet, Text, TextInput, View } from \"react-native\";\r\nimport Card from '../components/Card';\r\nimport Colors from '../constants/Colors';\r\n\r\nconst restart = (rounds) => {\r\n    rounds = -1;\r\n    console.log(rounds)\r\n  }\r\n\r\n  const [name, setName] = useState(undefined)\r\n\r\n  const setPokemon = async () => {\r\n    const [name] = await useFetchPokemon(enteredValue);\r\n    setName(name)\r\n} \r\n\r\nconst GameOverScreen = ({rounds, numberGuessed, onRestartGame}) => {\r\n  return (\r\n      <View style={styles.screen}>\r\n          <Card style={styles.gameOverBox}>\r\n            <Text style={styles.gameOverTitle}>Game Over</Text>\r\n            <Text>Guessed:</Text>\r\n            <Text style={styles.gameOverMsg}>{numberGuessed}</Text>\r\n            <Text>Took: {rounds} rounds</Text>\r\n          </Card>\r\n          <View>\r\n              <Button\r\n                title=\"Restart\"\r\n                style={styles.button}\r\n                color={Colors.secondary}\r\n                onPress ={() => {onRestartGame()}}\r\n               />\r\n          </View>\r\n          {name}\r\n      </View>\r\n    )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex: 1,\r\n        padding: 10,\r\n        alignItems: 'center'\r\n    },\r\n    gameOverTitle: {\r\n        fontSize: 26,\r\n        color: Colors.secondary,\r\n        margin: 15,\r\n        textAlign: 'center',\r\n    },\r\n    gameOverMsg: {\r\n        fontSize: 22,\r\n        color: Colors.primary,\r\n        margin: 10,\r\n    },\r\n    gameOverBox: {\r\n        shadowColor: Colors.tertiary,\r\n    },\r\n})\r\n\r\nexport default GameOverScreen"]},"metadata":{},"sourceType":"module"}