{"ast":null,"code":"import _slicedToArray from \"@babel/runtime/helpers/slicedToArray\";\nimport React, { useState, useRef } from 'react';\nimport Button from \"react-native-web/dist/exports/Button\";\nimport StyleSheet from \"react-native-web/dist/exports/StyleSheet\";\nimport Text from \"react-native-web/dist/exports/Text\";\nimport View from \"react-native-web/dist/exports/View\";\nimport Alert from \"react-native-web/dist/exports/Alert\";\nimport Card from \"../components/Card\";\nimport NumberContainer from \"../components/NumberContainer\";\nimport Constants from \"../constants/constants\";\nimport { jsx as _jsx } from \"react/jsx-runtime\";\nimport { jsxs as _jsxs } from \"react/jsx-runtime\";\n\nvar generateRandomBetween = function generateRandomBetween(min, max, exclude) {\n  min = Math.ceil(min);\n  max = Math.floor(max);\n  var randNum = Math.random() * (max - min) + min;\n  var randNumFloored = Math.floor(randNum);\n\n  if (randNum == exclude) {\n    return generateRandomBetween(min, max, exclude);\n  } else {\n    return randNumFloored;\n  }\n};\n\nvar GameScreen = function GameScreen(_ref) {\n  var selectedNumber = _ref.selectedNumber;\n  alert('work');\n  var currentLow = useRef(1);\n  var currentHigh = useRef(100);\n\n  var _useState = useState(generateRandomBetween(currentLow.current, currentHigh.current, selectedNumber)),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentGuess = _useState2[0],\n      setCurrentGuess = _useState2[1];\n\n  var nextGuess = function nextGuess(direction) {\n    if (direction === Constants.direction.higher && currentGuess > selectedNumber || direction === Constants.direction.lower && currentGuess < selectedNumber) {\n      alert(\"please, do not lie\");\n      return;\n    }\n\n    if (direction === Constants.direction.lower) {\n      currentHigh.current = currentGuess;\n    } else {\n      currentLow.current = currentGuess;\n    }\n\n    var nextNum = generateRandomBetween(currentLow.current, currentHigh.current, currentGuess);\n    setCurrentGuess(nextNum);\n  };\n\n  return _jsxs(View, {\n    style: styles.screen,\n    children: [_jsx(Text, {\n      children: \"Computer guess: \"\n    }), _jsx(NumberContainer, {\n      children: currentGuess\n    }), _jsxs(Card, {\n      style: styles.buttonContainer,\n      children: [_jsx(Button, {\n        title: \"Lower\",\n        onPress: function onPress() {\n          nextGuess(Constants.direction.lower);\n        }\n      }), _jsx(Button, {\n        title: \"Higher\",\n        onPress: function onPress() {\n          nextGuess(Constants.direction.higher);\n        }\n      })]\n    })]\n  });\n};\n\nvar styles = StyleSheet.create({\n  screen: {\n    flex: 1,\n    padding: 10,\n    alignItems: 'center'\n  },\n  buttonContainer: {\n    flexDirection: 'row',\n    justifyContent: 'space-around',\n    marginTop: 20\n  }\n});\nexport default GameScreen;","map":{"version":3,"sources":["C:/Users/nano0/Desktop/NumberGuesser/screens/GameScreen.js"],"names":["React","useState","useRef","Card","NumberContainer","Constants","generateRandomBetween","min","max","exclude","Math","ceil","floor","randNum","random","randNumFloored","GameScreen","selectedNumber","alert","currentLow","currentHigh","current","currentGuess","setCurrentGuess","nextGuess","direction","higher","lower","nextNum","styles","screen","buttonContainer","StyleSheet","create","flex","padding","alignItems","flexDirection","justifyContent","marginTop"],"mappings":"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","sourcesContent":["import React, {useState, useRef} from 'react'\r\nimport {Button, StyleSheet, Text, View, Alert} from 'react-native';\r\n\r\nimport Card from '../components/Card';\r\nimport NumberContainer from '../components/NumberContainer';\r\n\r\nimport Constants from '../constants/constants';\r\n\r\nconst generateRandomBetween=(min, max, exclude)=>{\r\n    min =Math.ceil(min);\r\n    max=Math.floor(max);\r\n\r\n    const randNum=Math.random()*(max-min)+min;\r\n    const randNumFloored=Math.floor(randNum);\r\n\r\n    if(randNum==exclude){\r\n        return generateRandomBetween(min, max, exclude);\r\n    }else{\r\n        return randNumFloored;\r\n    }\r\n}\r\n\r\nconst GameScreen = ({selectedNumber}) => {\r\n    alert('work')\r\n    const currentLow=useRef(1);\r\n    const currentHigh=useRef(100);\r\n    const [currentGuess, setCurrentGuess]=useState(generateRandomBetween(currentLow.current,currentHigh.current,selectedNumber))\r\n    \r\n    const nextGuess=direction=>{\r\n        if( (direction === Constants.direction.higher && currentGuess > selectedNumber ) || (direction === Constants.direction.lower && currentGuess < selectedNumber))\r\n        {\r\n           //  Alert(\"(if you are justice) Please do not lie\", [{text: \"Sorry\"}])\r\n            alert(\"please, do not lie\")\r\n            return\r\n        }\r\n        if(direction===Constants.direction.lower){\r\n            currentHigh.current=currentGuess;\r\n        }else{\r\n            currentLow.current=currentGuess;\r\n        }\r\n        const nextNum=generateRandomBetween(currentLow.current,currentHigh.current,currentGuess);\r\n        setCurrentGuess(nextNum);\r\n\r\n    }\r\n\r\nreturn (\r\n    <View style={styles.screen}>\r\n        <Text>Computer guess: </Text>\r\n        <NumberContainer>{currentGuess}</NumberContainer>\r\n        <Card style={styles.buttonContainer}>\r\n            <Button title='Lower' onPress={ () => {nextGuess(Constants.direction.lower)} } />\r\n            <Button title='Higher' onPress={ () => {nextGuess(Constants.direction.higher)} } />\r\n        </Card>\r\n    </View>\r\n  )\r\n}\r\n\r\nconst styles = StyleSheet.create({\r\n    screen: {\r\n        flex:1,\r\n        padding:10,\r\n        alignItems:'center',\r\n    },buttonContainer:{\r\n        flexDirection:'row',\r\n        justifyContent:'space-around',\r\n        marginTop:20,\r\n    }\r\n  });\r\nexport default GameScreen"]},"metadata":{},"sourceType":"module"}