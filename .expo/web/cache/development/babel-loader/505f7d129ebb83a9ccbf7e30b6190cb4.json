{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport { urls } from \"../constants/constants\";\nexport var useFetchpokemon = function useFetchpokemon(dexNum) {\n  var response, data, _await$response$json, name, ing;\n\n  return _regeneratorRuntime.async(function useFetchpokemon$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          _context.next = 2;\n          return _regeneratorRuntime.awrap(fetch(urls.pkmonPath + \"/\" + dexNum));\n\n        case 2:\n          response = _context.sent;\n          _context.next = 5;\n          return _regeneratorRuntime.awrap(response.json);\n\n        case 5:\n          data = _context.sent;\n          _context.next = 8;\n          return _regeneratorRuntime.awrap(response.json());\n\n        case 8:\n          _await$response$json = _context.sent;\n          name = _await$response$json.name;\n          ing = _await$response$json.sprites.front_default;\n          return _context.abrupt(\"return\", {\n            name: name,\n            ing: ing\n          });\n\n        case 12:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Users/nano0/Desktop/NumberGuesser/hooks/useFetchpokemon.js"],"names":["urls","useFetchpokemon","dexNum","fetch","pkmonPath","response","json","data","name","ing","sprites","front_default"],"mappings":";AAAA,SAAQA,IAAR;AAEA,OAAO,IAAMC,eAAe,GAAC,SAAhBA,eAAgB,CAAMC,MAAN;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2CACHC,KAAK,CAAIH,IAAI,CAACI,SAAT,SAAsBF,MAAtB,CADF;;AAAA;AACnBG,UAAAA,QADmB;AAAA;AAAA,2CAEPA,QAAQ,CAACC,IAFF;;AAAA;AAEnBC,UAAAA,IAFmB;AAAA;AAAA,2CAIwBF,QAAQ,CAACC,IAAT,EAJxB;;AAAA;AAAA;AAIlBE,UAAAA,IAJkB,wBAIlBA,IAJkB;AAIYC,UAAAA,GAJZ,wBAIZC,OAJY,CAIFC,aAJE;AAAA,2CAMnB;AACFH,YAAAA,IAAI,EAAJA,IADE;AAEFC,YAAAA,GAAG,EAAHA;AAFE,WANmB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAtB","sourcesContent":["import {urls} from '../constants/constants'\r\n\r\nexport const useFetchpokemon=async(dexNum)=>{\r\n    const response =await fetch(`${urls.pkmonPath}/${dexNum}`)\r\n    const data =await response.json\r\n\r\n    const {name, sprites: {front_default:ing}}=await response.json()\r\n\r\n    return{\r\n        name,\r\n        ing\r\n    }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}